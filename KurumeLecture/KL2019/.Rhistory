# 一様分布からの乱数発生
n <- 1000
r <- runif(n)
plot(r)
hist(r)
plot(sort(r))
n <- 10000
X <- sample(c(0,1),n,replace=TRUE)
Y <- sample(c(0,1),n,replace=TRUE)
plot(X,Y)
table(X,Y)
tab <- table(X,Y)
chisq.test(tab)
n.iter <- 1000
ps <- rep(0,n.iter)
for(i in 1:n.iter){
X <- sample(c(0,1),n,replace=TRUE)
Y <- sample(c(0,1),n,replace=TRUE)
tab <- table(X,Y)
chisqout <- chisq.test(tab)
ps[i] <- chisqout$p.value
}
hist(ps)
plot(sort(ps))
my.exact.prob <- function(tab){
a <- tab[1,1]
b <- tab[1,2]
c <- tab[2,1]
d <- tab[2,2]
ab <- a + b
cd <- c + d
ac <- a + c
bd <- b + d
n <- sum(tab)
bunbo <- factorial(n) * factorial(a)*factorial(b)*factorial(c)*factorial(d)
bunsi <- factorial(ab)*factorial(cd)*factorial(ac)*factorial(bd)
prob <- bunsi / bunbo
return(prob)
}
tab1 <- matrix(c(1,1,1,0),2,2)
tab1
tab2 <- matrix(c(2,0,0,1),2,2)
my.exact.prob(tab1)
my.exact.prob(tab2)
fisher.test(tab)
ps <- seq(from=0,to=1,length=1000)
n <- 10
k <- 3
db <- dbeta(ps,k+1,n-k+1) # "+1"はおまじない
plot(ps,db,type="l")
dp <- 40
prob <- c(0.5,0.5)
gs <- sample(0:1,dp,replace=TRUE,prob=prob)
table(gs)
dp <- 40
# エラーを考慮
err <- 0.1
prob <- c(1-err,err)
gs <- sample(0:1,dp,replace=TRUE,prob=prob)
table(gs)
nsample <- 100
ngene <- 1000
S <- sin(sample(nsample))+0.4
G <- sin((sample(1gene))/10)^3
nsample <- 100
ngene <- 1000
S <- sin(sample(nsample))+0.4
G <- sin((sample(gene))/10)^3
nsample <- 100
ngene <- 1000
S <- sin(sample(nsample))+0.4
G <- sin((sample(ngene))/10)^3
X <- matrix(S,ncol=1) %*% matrix(G,nrow=1)
X <- X + rnorm(length(X),0,sd(X)*0.1)
image(X)
heatmap(X)
n1 <- 100
n2 <- 30
nsample <- n1 + n2
X <- matrix(0,nsample,2)
X[1:n1,] <- cbind(rnorm(n1),rnorm(n1))
X[(n1+1):nsample,] <- cbind(rnorm(n2)+5,rnorm(n2+0.5))
plot(X)
d <- dist(X)
cl <- hclust(d)
plot(cl)
n.gr <- 2
cl2 <- kmeans(X,centers=n.gr)
plot(X,col=cl2[[1]])
n.gr <- 3
cl2 <- kmeans(X,centers=n.gr)
plot(X,col=cl2[[1]])
n.gr <- 2
cl2 <- kmeans(X,centers=n.gr)
plot(X,col=cl2[[1]])
for(i in 1:length(X[,1])){
for(j in 1:length(X[,2])){
if(cl2[[1]][i]==cl2[[1]][j]){
segments(X[i,1],X[i,2],X[j,1],X[j,2])
}
}
}
n.gr <- 2
cl2 <- kmeans(X,centers=n.gr)
plot(X,col=cl2[[1]])
for(i in 1:length(X[,1])){
for(j in 1:length(X[,2])){
if(cl2[[1]][i]==cl2[[1]][j]){
segments(X[i,1],X[i,2],X[j,1],X[j,2])
}
}
}
plot(X)
d <- as.matrix(dist(X))
mean.d <- mean(d)
for(i in 1:(length(X[,1])-1)){
for(j in (1+i):length(X[,1])){
if(d[i,j] < mean(d)/4){
segments(X[i,1],X[i,2],X[j,1],X[j,2])
}
}
}
library(igraph)
d2 <- d
d2[which(d2 < mean.d/4)] <- 1
d2[which(d2 >= mean.d/4)] <- 0
g <- graph.adjacency(d2)
plot(g)
install.packages("igraph")
install.packages("igraph")
install.packages("igraph")
install.packages("igraph")
install.packages("igraph")
