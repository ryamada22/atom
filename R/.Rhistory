}
}
for(i in 1:length(infos)){
if(length(infos[[i]]) == 1){
info.ve <- c(info.ve,infos[[i]][1])
}else{
if(root.yet){
root.word <- infos[[i]][2]
root.yet <- FALSE
}
tmp.info1 <- my.info.select(info.ve)
ret[[nt]] <- list(word=infos[[i]][2],kaku=infos[[i]][1],info1=tmp.info1,info2=infos[[i]][3],repword=root.word)
nt <- nt+1
}
}
return(ret)
}
# ファイル・フォルダのパス
pth <- "C:/Users/Ryo Yamada/Desktop/Yakuru/"
#### Defaults
# ファイルの拡張子
#f.ext <- "*.txt"
# separators
#sepa = "\r\n"
#sepb = " "
#out.sep1 = "::"
#out.sep2 = "_"
my.inv.database <- my.make.database(pth=pth)
filenames <- list.files(pth, pattern=f.ext, full.names=TRUE)
ldf <- lapply(filenames, read_file)
ldf <- lapply(ldf,function(x){gsub("、",",",x)})
for(i in 1:length(gr.info)){
for(j in 1:length(gr.info[[i]])){
tmp <- gr.info[[i]][j]
tmp2 <- paste(i,tmp,sep=out.sep)
ldf <- lapply(ldf,function(x){gsub(tmp,tmp2,x)})
}
}
ldf[[1]]
my.line.number.info(ldf[[1]],sep="\r\n",hinshis=gr.info[[1]])
my.line.number.info(ldf[[1]],sep="\n",hinshis=gr.info[[1]])
unlist(ldf[[1]],"\r\n")
unlist(strsplit(ldf[[1]],"\r\n"))
my.make.database <- function(pth = pth,gr.info=gr.info,f.ext="*.txt",sepa = "\r\n",sepb="_",out.sep="_"){
filenames <- list.files(pth, pattern=f.ext, full.names=TRUE)
ldf <- lapply(filenames, read_file)
ldf <- lapply(ldf,function(x){gsub("、",",",x)})
res <- lapply(ldf,my.make.list.of.words,sepa=sepa,sepb=sepb,gr.info=gr.info)
RES <- list()
nt <- 1
for(i in 1:length(res)){
for(j in 1:length(res[[i]])){
RES[[nt]] <- res[[i]][[j]]
nt <- nt + 1
}
}
return(RES)
}
# ファイル・フォルダのパス
pth <- "C:/Users/Ryo Yamada/Desktop/Yakuru/"
#### Defaults
# ファイルの拡張子
#f.ext <- "*.txt"
# separators
#sepa = "\r\n"
#sepb = " "
#out.sep1 = "::"
#out.sep2 = "_"
my.inv.database <- my.make.database(pth=pth)
filenames <- list.files(pth, pattern=f.ext, full.names=TRUE)
ldf <- lapply(filenames, read_file)
ldf <- lapply(ldf,function(x){gsub("、",",",x)})
res <- lapply(ldf,my.make.list.of.words,sepa=sepa,sepb=sepb,gr.info=gr.info)
res[[1]]
ldf[[1]]
str<-ldf[[1]]
str
info.ve <- c()
root.word <- c()
root.yet <- TRUE
ret <- list()
nt <- 1 # retリストの要素番号カウンタ
info.line.num <- my.line.number.info(str,sep=sepa,hinshis=gr.info[[1]])
info.line.num
infos <- my.make.list.with.separation(str,start.line=info.line.num,sepa,sepb)
infos
for(ii in 1:length(infos)){
for(i in 1:length(gr.info)){
for(j in 1:length(gr.info[[i]])){
tmp <- gr.info[[i]][j]
tmp2 <- paste(i,tmp,sep="_")
infos[[ii]] <-gsub(tmp,tmp2,infos[[ii]])
}
}
}
infos
my.make.list.of.words <- function(str,sepa="\r\n",sepb=" ",gr.info=gr.info){
info.ve <- c()
root.word <- c()
root.yet <- TRUE
ret <- list()
nt <- 1 # retリストの要素番号カウンタ
info.line.num <- my.line.number.info(str,sep=sepa,hinshis=gr.info[[1]])
infos <- my.make.list.with.separation(str,start.line=info.line.num,sepa,sepb)
for(ii in 1:length(infos)){
for(i in 1:length(gr.info)){
for(j in 1:length(gr.info[[i]])){
tmp <- gr.info[[i]][j]
tmp2 <- paste(i,tmp,sep="_")
infos[[ii]] <-gsub(tmp,tmp2,infos[[ii]])
}
}
}
for(i in 1:length(infos)){
if(length(infos[[i]]) == 1){
info.ve <- c(info.ve,infos[[i]][1])
}else{
if(root.yet){
root.word <- infos[[i]][2]
root.yet <- FALSE
}
tmp.info1 <- my.info.select(info.ve)
ret[[nt]] <- list(word=infos[[i]][2],kaku=infos[[i]][1],info1=tmp.info1,info2=infos[[i]][3],repword=root.word)
nt <- nt+1
}
}
return(ret)
}
term.gr
my.make.list.of.words <- function(str,sepa="\r\n",sepb=" ",gr.info=gr.info){
info.ve <- c()
root.word <- c()
root.yet <- TRUE
ret <- list()
nt <- 1 # retリストの要素番号カウンタ
info.line.num <- my.line.number.info(str,sep=sepa,hinshis=gr.info[[1]])
infos <- my.make.list.with.separation(str,start.line=info.line.num,sepa,sepb)
for(ii in 1:length(infos)){
for(i in 1:length(gr.info)){
for(j in 1:length(gr.info[[i]])){
tmp <- gr.info[[i]][j]
tmp2 <- paste(i,tmp,sep="_")
infos[[ii]] <-gsub(tmp,tmp2,infos[[ii]])
}
}
}
for(i in 1:length(infos)){
if(length(infos[[i]]) == 1){
info.ve <- c(info.ve,infos[[i]][1])
}else{
if(root.yet){
root.word <- infos[[i]][2]
root.yet <- FALSE
}
tmp.info1 <- my.info.select(info.ve,gr.info)
ret[[nt]] <- list(word=infos[[i]][2],kaku=infos[[i]][1],info1=tmp.info1,info2=infos[[i]][3],repword=root.word)
nt <- nt+1
}
}
return(ret)
}
# ファイル・フォルダのパス
pth <- "C:/Users/Ryo Yamada/Desktop/Yakuru/"
#### Defaults
# ファイルの拡張子
#f.ext <- "*.txt"
# separators
#sepa = "\r\n"
#sepb = " "
#out.sep1 = "::"
#out.sep2 = "_"
my.inv.database <- my.make.database(pth=pth)
str
info.ve <- c()
root.word <- c()
root.yet <- TRUE
ret <- list()
nt <- 1 # retリストの要素番号カウンタ
info.line.num <- my.line.number.info(str,sep=sepa,hinshis=gr.info[[1]])
infos <- my.make.list.with.separation(str,start.line=info.line.num,sepa,sepb)
for(ii in 1:length(infos)){
for(i in 1:length(gr.info)){
for(j in 1:length(gr.info[[i]])){
tmp <- gr.info[[i]][j]
tmp2 <- paste(i,tmp,sep="_")
infos[[ii]] <-gsub(tmp,tmp2,infos[[ii]])
}
}
}
infos
info.ve
root.yet
for(i in 1:length(infos)){
if(length(infos[[i]]) == 1){
info.ve <- c(info.ve,infos[[i]][1])
}else{
if(root.yet){
root.word <- infos[[i]][2]
root.yet <- FALSE
}
tmp.info1 <- my.info.select(info.ve,gr.info)
ret[[nt]] <- list(word=infos[[i]][2],kaku=infos[[i]][1],info1=tmp.info1,info2=infos[[i]][3],repword=root.word)
nt <- nt+1
}
}
ret[[1]]
nt
root.yet
infos[[1]]
infos[[1]]info.ve
info.ve
root.word
length(infos[[1]])
info.ve
infos[[1]]
infos[[1]][1]
infos[[1]][2]
infos[[2]][2]
infos[[2]]
infos[[3]]
infos[[4]]
str
my.make.database <- function(pth = pth,gr.info=gr.info,f.ext="*.txt",sepa = "\r\n",sepb=" ",out.sep="_"){
filenames <- list.files(pth, pattern=f.ext, full.names=TRUE)
ldf <- lapply(filenames, read_file)
ldf <- lapply(ldf,function(x){gsub("、",",",x)})
res <- lapply(ldf,my.make.list.of.words,sepa=sepa,sepb=sepb,gr.info=gr.info)
RES <- list()
nt <- 1
for(i in 1:length(res)){
for(j in 1:length(res[[i]])){
RES[[nt]] <- res[[i]][[j]]
nt <- nt + 1
}
}
return(RES)
}
# ファイル・フォルダのパス
pth <- "C:/Users/Ryo Yamada/Desktop/Yakuru/"
#### Defaults
# ファイルの拡張子
#f.ext <- "*.txt"
# separators
#sepa = "\r\n"
#sepb = " "
#out.sep1 = "::"
#out.sep2 = "_"
my.inv.database <- my.make.database(pth=pth)
filenames <- list.files(pth, pattern=f.ext, full.names=TRUE)
ldf <- lapply(filenames, read_file)
ldf <- lapply(ldf,function(x){gsub("、",",",x)})
ldf[[1]]
sepb
sepb <- " "
my.make.database
# ファイル・フォルダのパス
pth <- "C:/Users/Ryo Yamada/Desktop/Yakuru/"
#### Defaults
# ファイルの拡張子
#f.ext <- "*.txt"
# separators
#sepa = "\r\n"
#sepb = " "
#out.sep1 = "::"
#out.sep2 = "_"
my.inv.database <- my.make.database(pth=pth)
knitr::opts_chunk$set(echo = TRUE)
library(stringr)
library(stringi)
library(readr)
library(Dict)
gr.info <- list(c("代名詞","名詞","形容詞","形動詞","動詞"),c("一人称","二人称","三人称"),c("単数","複数"),c("男性","女性","中性"),c("現在","過去","未来"))
# 情報開始行の番数を返す
my.line.number.info <- function(str,sep,hinshis=gr.info[[1]]){
sep1 <- unlist(strsplit(str,sep))
hinshi.line <- 0
for(i in 1:length(sep1)){
if(is.element(sep1[i],hinshis)){
hinshi.line <- i
hinshi <- sep1[i]
break
}
}
return(i)
}
my.make.list.with.separation <- function(str,start.line=1,sepa="\n",sepb=" "){
sep1 <- unlist(strsplit(str,sepa))
sep2 <- list()
for(i in start.line:length(sep1)){
sep2[[i-start.line+1]] <- unlist(strsplit(sep1[i],sepb))
}
return(sep2)
}
my.make.list.of.words <- function(str,sepa="\r\n",sepb=" ",gr.info=gr.info){
info.ve <- c()
root.word <- c()
root.yet <- TRUE
ret <- list()
nt <- 1 # retリストの要素番号カウンタ
info.line.num <- my.line.number.info(str,sep=sepa,hinshis=gr.info[[1]])
infos <- my.make.list.with.separation(str,start.line=info.line.num,sepa,sepb)
for(ii in 1:length(infos)){
for(i in 1:length(gr.info)){
for(j in 1:length(gr.info[[i]])){
tmp <- gr.info[[i]][j]
tmp2 <- paste(i,tmp,sep="_")
infos[[ii]] <-gsub(tmp,tmp2,infos[[ii]])
}
}
}
for(i in 1:length(infos)){
if(length(infos[[i]]) == 1){
info.ve <- c(info.ve,infos[[i]][1])
}else{
if(root.yet){
root.word <- infos[[i]][2]
root.yet <- FALSE
}
tmp.info1 <- my.info.select(info.ve,gr.info)
ret[[nt]] <- list(word=infos[[i]][2],kaku=infos[[i]][1],info1=tmp.info1,info2=infos[[i]][3],repword=root.word)
nt <- nt+1
}
}
return(ret)
}
my.info.select <- function(x,term.gr=gr.info){
ret <- c()
for(i in 1:length(term.gr)){
tmp <- rep(FALSE,length(length(x)))
for(j in 1:length(term.gr[[i]])){
tmp <- tmp | str_detect(x, pattern=term.gr[[i]][j])
}
s <- which(tmp)
if(length(s)>1){
x <- c(x[-s],x[max(s)])
}
}
return(x)
}
my.search.tail <- function(w,dict,tocheck=nchar(w)){
d.w <- sapply(dict,function(d){d$word})
len <- nchar(w)
ret <- list()
for(i in 1:length(tocheck)){
ret[[i]] <- c()
tmp <- lapply(d.w,function(x){tmp.len <- nchar(x);return(substr(x,(tmp.len-tocheck[i]+1),tmp.len))})
target <- substr(w,len-tocheck[i]+1,len)
tmp2 <- sapply(tmp,function(x){return(x==target)})
ret[[i]] <- which(tmp2)
}
return(ret)
}
## Default
#out.sep1 = "::"
#out.sep2 = "_"
my.search.string <- function(word,out.sep1="::",out.sep2 = "_"){
sorted.info1 <- sort(word$info1)
sorted.info2 <- sort(word$info2)
s.concat.info1 <- paste(sorted.info1,collapse=",")
s.concat.info2 <- paste(sorted.info2,collapse=",")
ret <- paste(s.concat.info1,out.sep1,s.concat.info2,out.sep1,word$word,word$repword,sep=out.sep2)
return(ret)
}
my.display <- function(dict,ids){
ret <- c()
for(i in 1:length(ids)){
tmp <- dict[[ids[i]]]
ret <- c(ret,my.search.string(tmp))
}
return(ret)
}
my.summary.tail.stat <- function(w,dict,tocheck=nchar(w)){
out <- my.search.tail(w,dict,tocheck=tocheck)
out. <- unlist(out)
info1s <- info2s <- c()
#for(i in 1:length(out[[1]])){
for(i in 1:length(out.)){
#wd <- dict[[out[[1]][i]]]
word <- dict[[out.[i]]]
sorted.info1 <- sort(word$info1)
sorted.info2 <- sort(word$info2)
s.concat.info1 <- paste(sorted.info1,collapse=",")
s.concat.info2 <- paste(sorted.info2,collapse=",")
info1s <- c(info1s,s.concat.info1)
info2s <- c(info2s,s.concat.info2)
}
tabout1 <- table(info1s)
tabout2 <- table(info2s)
return(list(tabout1,tabout2))
}
my.summary.tail <- function(w,dict,tocheck=nchar(w)){
out <- my.search.tail(w,dict,tocheck=tocheck)
out. <- unlist(out)
#ret <- my.display(dict,out[[1]])
ret <- my.display(dict,out.)
return(ret)
}
my.print.stat <- function(stat.out,label1 = "info1",label2="info2"){
print(label1)
ord1 <- order(stat.out[[1]],decreasing=TRUE)
for(i in 1:length(stat.out[[1]])){
print(stat.out[[1]][ord1[i]])
}
print(label2)
ord2 <- order(stat.out[[2]],decreasing=TRUE)
for(i in 1:length(stat.out[[2]])){
print(stat.out[[2]][ord2[i]])
}
}
my.make.database <- function(pth = pth,gr.info=gr.info,f.ext="*.txt",sepa = "\r\n",sepb=" ",out.sep="_"){
filenames <- list.files(pth, pattern=f.ext, full.names=TRUE)
ldf <- lapply(filenames, read_file)
ldf <- lapply(ldf,function(x){gsub("、",",",x)})
res <- lapply(ldf,my.make.list.of.words,sepa=sepa,sepb=sepb,gr.info=gr.info)
RES <- list()
nt <- 1
for(i in 1:length(res)){
for(j in 1:length(res[[i]])){
RES[[nt]] <- res[[i]][[j]]
nt <- nt + 1
}
}
return(RES)
}
# ファイル・フォルダのパス
pth <- "C:/Users/Ryo Yamada/Desktop/Yakuru/"
#### Defaults
# ファイルの拡張子
#f.ext <- "*.txt"
# separators
#sepa = "\r\n"
#sepb = " "
#out.sep1 = "::"
#out.sep2 = "_"
my.inv.database <- my.make.database(pth=pth)
f.ext
sepa
sepb
out.sep
filenames <- list.files(pth, pattern=f.ext, full.names=TRUE)
ldf <- lapply(filenames, read_file)
ldf <- lapply(ldf,function(x){gsub("、",",",x)})
res <- lapply(ldf,my.make.list.of.words,sepa=sepa,sepb=sepb,gr.info=gr.info)
res[[1]]
res[[2]]
res[[1]][[1]]
res[[1]][[2]]
RES <- list()
nt <- 1
for(i in 1:length(res)){
for(j in 1:length(res[[i]])){
RES[[nt]] <- res[[i]][[j]]
nt <- nt + 1
}
}
RES[[1]]
RES[[2]]
my.make.database <- function(pth = pth,gr.info=gr.info,f.ext="*.txt",sepa = "\r\n",sepb=" ",out.sep="_"){
filenames <- list.files(pth, pattern=f.ext, full.names=TRUE)
ldf <- lapply(filenames, read_file)
ldf <- lapply(ldf,function(x){gsub("、",",",x)})
res <- lapply(ldf,my.make.list.of.words,sepa=sepa,sepb=sepb,gr.info=gr.info)
RES <- list()
nt <- 1
for(i in 1:length(res)){
for(j in 1:length(res[[i]])){
RES[[nt]] <- res[[i]][[j]]
nt <- nt + 1
}
}
return(RES)
}
# ファイル・フォルダのパス
pth <- "C:/Users/Ryo Yamada/Desktop/Yakuru/"
#### Defaults
# ファイルの拡張子
#f.ext <- "*.txt"
# separators
#sepa = "\r\n"
#sepb = " "
#out.sep1 = "::"
#out.sep2 = "_"
my.inv.database <- my.make.database(pth=pth)
hinshis
gr.info[[1]]
hinshis <- gr.info[[1]]
# ファイル・フォルダのパス
pth <- "C:/Users/Ryo Yamada/Desktop/Yakuru/"
#### Defaults
# ファイルの拡張子
#f.ext <- "*.txt"
# separators
#sepa = "\r\n"
#sepb = " "
#out.sep1 = "::"
#out.sep2 = "_"
my.inv.database <- my.make.database(pth=pth)
# 情報開始行の番数を返す
my.line.number.info <- function(str,sep,gr.info=gr.info){
sep1 <- unlist(strsplit(str,sep))
hinshi.line <- 0
for(i in 1:length(sep1)){
if(is.element(sep1[i],gr.info[[1]])){
hinshi.line <- i
hinshi <- sep1[i]
break
}
}
return(i)
}
gr.info[[1]]
is.element("動詞",gr.info[[1]])
